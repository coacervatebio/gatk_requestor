{{- range .Values.test.registered }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: test-requestor-{{ .name }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    module: test-runner
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        module: test-runner-pod
    spec:
      restartPolicy: Never
      volumes:
        - name: {{ $.Values.yagna.rootVolName }}
          persistentVolumeClaim:
            claimName: {{ $.Values.yagna.pvcName }}
        - name: {{ $.Values.test.assetVolName }}
          persistentVolumeClaim:
            claimName: {{ $.Values.test.pvcName }}
            readOnly: True
        - name: testing-tempdir
          emptyDir: {}
      initContainers:
        - name: test-setup-{{ .name }}
          image: 'alpine:latest'
          volumeMounts:
            - name: {{ $.Values.test.assetVolName }}
              subPath: {{ .subPath }}/inputs/data/results
              mountPath: /data/results
            - name: testing-tempdir
              mountPath: /tempdir
          command: ["cp"]
          args: 
            - '-r' 
            - /data/results
            - /tempdir/results
      containers:
        - name: test-requestor-{{ .name }}
          image: "{{ $.Values.image.requestor.repository }}:{{ $.Values.image.requestor.tag }}"
          imagePullPolicy: Never
          command: ["snakemake"]
          args:
            - '-s=/data/workflow/Snakefile'
            - '-c=4'
            - '--nt'
          volumeMounts:
            - name: testing-tempdir
              subPath: results
              mountPath: /data/results
            - name: {{ $.Values.test.assetVolName }}
              subPath: {{ .subPath }}/inputs/data/workflow/Snakefile
              mountPath: /data/workflow/Snakefile
            - name: {{ $.Values.yagna.rootVolName }}
              subPath: {{ $.Values.yagna.socketSubpath }}
              mountPath: {{ $.Values.yagna.socketMount }}
          env:
            - name: YAGNA_API_URL
              value: "http://{{ $.Values.yagna.svcName }}:{{ $.Values.yagna.port }}"
        - name: test-checker-{{ .name }}
          image: "{{ $.Values.test.imageRepo }}:{{ $.Values.test.imageTag }}"
          imagePullPolicy: Never
          {{ if .checkCom }}
          command: {{ .checkCom }}
          {{ else }}
          command: {{ $.Values.test.defaultCheckCom }}
          {{ end }}
          volumeMounts:
            - name: testing-tempdir
              subPath: results
              mountPath: /temp_test/data/results
            - name: {{ $.Values.test.assetVolName }}
              subPath: {{ .subPath }}
              mountPath: /assets
{{- end }}
